#!/usr/bin/swift

import Foundation
import Darwin

extension String {
    func toUpperCase() -> String {
        return self.split(separator: "_").map {$0.capitalized}.joined()
    }
    func firstWord() -> String {
        let words = self.split(separator: "_")
        return String(words.first ?? "")
    }
}

var content = """
// This file is automatically generated by a script. Do not modify.\n
//
//  LocalizableConstants.swift
//  Applivery SDK
//
//  Created by Alejandro Jiménez
//

import Foundation

// swiftlint:disable identifier_name

"""

// Load

func loadLocalizablePlist() -> [String: String] {
    let file = "./en.lproj/Localizable.strings"
    guard let dictionary = NSDictionary(contentsOfFile: file) as? [String: String] else {
        fputs("❌ Wrong Localization URL: \(file)\n", stderr)
        exit(-1)
    }
    return dictionary
}

let dictionary = loadLocalizablePlist()

// Generate Content

var section = ""

let sortedKeys = Array(dictionary.keys).sorted()

for key in sortedKeys {
    
    let firstWord = key.firstWord()
    if firstWord != section {
        section = firstWord
        content += "\n// \(section.capitalized)\n"
    }
    content += "public let kLocale\(key.toUpperCase()): String = localize(\"\(key)\")\n"
    fputs("\n Adding constant: \(key)\n", stderr)
}

content += """

// swiftlint:enable identifier_name
"""

// Save

func save(_ content: String) {
    
    func getDocumentsDirectory() -> URL {
        let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)
        return paths[0]
    }
    
    let filename = URL(fileURLWithPath: "./LocalizableConstants.swift")
    
    do {
        try content.write(to: filename, atomically: false, encoding: .utf8)
    } catch let error as NSError {
        fputs("❌ \(error)", stderr)
        exit(-1)
    }
}

save(content)
fputs("\n Finished 👍\n\n", stderr)
